// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartSchool_WebAPI.Data;

namespace SmartSchool_WebAPI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200627232338_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Document")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phonenumber")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 969, DateTimeKind.Local).AddTicks(2630),
                            Document = "455.278.840-00",
                            Email = "clarkkent@yahoo.com",
                            FirstName = "Clark",
                            LastName = "Kent",
                            Phonenumber = "11933225555",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2292)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2931),
                            Document = "860.187.460-69",
                            Email = "leonskennedy@hotmail.com",
                            FirstName = "Leon",
                            LastName = "Kennedy",
                            Phonenumber = "21999880033",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2955)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2974),
                            Document = "730.648.440-08",
                            Email = "brucewayne@gmail.com",
                            FirstName = "Bruce",
                            LastName = "Wayne",
                            Phonenumber = "47933442121",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2977)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2981),
                            Document = "704.332.760-10",
                            Email = "stark@yahoo.com",
                            FirstName = "Tony",
                            LastName = "Stark",
                            Phonenumber = "1397674944",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2983)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2986),
                            Document = "819.391.990-42",
                            Email = "hulk@hotmail.com",
                            FirstName = "Bruce",
                            LastName = "Benner",
                            Phonenumber = "45998877664",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2988)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2995),
                            Document = "268.910.380-06",
                            Email = "scooby@yahoo.com",
                            FirstName = "Scooby",
                            LastName = "Doo",
                            Phonenumber = "11945492790",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(2997)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(3000),
                            Document = "236.780.220-30",
                            Email = "charliebrown@hotmail.com",
                            FirstName = "Charlie",
                            LastName = "Brown",
                            Phonenumber = "34977553040",
                            UpdatedAt = new DateTime(2020, 6, 27, 20, 23, 37, 973, DateTimeKind.Local).AddTicks(3002)
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentSubject", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentsSubjects");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 1,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 3,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 5,
                            SubjectId = 5
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 6,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 1
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 2
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 3
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 4
                        },
                        new
                        {
                            StudentId = 7,
                            SubjectId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aritmética",
                            TeacherId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Física",
                            TeacherId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Português",
                            TeacherId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Informática",
                            TeacherId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Culinária",
                            TeacherId = 5
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Girafales",
                            LastName = "Gonzales"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Pardal",
                            LastName = "Voador"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Raimundo",
                            LastName = "Nonato"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "Alexsandro",
                            LastName = "Andrade"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Gladys",
                            LastName = "Moreno"
                        });
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.StudentSubject", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Student", "Student")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartSchool_WebAPI.Models.Subject", "Subject")
                        .WithMany("StudentsSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmartSchool_WebAPI.Models.Subject", b =>
                {
                    b.HasOne("SmartSchool_WebAPI.Models.Teacher", "Teacher")
                        .WithMany("Subjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
